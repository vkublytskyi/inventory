<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="AdminCreateShipmentForWholeOrderGroupedProductCustomStock">
        <annotations>
            <stories value="Grouped Product Custom Stock."/>
            <title value="Create Shipment for Grouped product on Custom stock."/>
            <description value="Verify, admin able to create shipment for grouped product on custom source."/>
            <testCaseId value="https://app.hiptest.com/projects/69435/test-plan/folders/735289/scenarios/1479707"/>
            <severity value="CRITICAL"/>
            <group value="msi"/>
            <group value="multi_mode"/>
        </annotations>

        <before>
            <createData entity="_defaultCategory" stepKey="category"/>
            <createData entity="SimpleProduct" stepKey="product">
                <requiredEntity createDataKey="category"/>
            </createData>
            <createData entity="MsiCustomer1" stepKey="customer">
                <field key="website_id">1</field>
            </createData>
            <createData entity="FullSource1" stepKey="additionalSource"/>
            <createData entity="BasicMsiStockWithMainWebsite1" stepKey="additionalStock"/>
            <createData entity="SourceStockLinked1" stepKey="sourceStockLink">
                <requiredEntity createDataKey="additionalStock"/>
                <requiredEntity createDataKey="additionalSource"/>
            </createData>
            <createData entity="GroupedProduct" stepKey="groupedProduct"/>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
        </before>
        <after>
            <!--Assign Default Stock to Default Website.-->
            <deleteData createDataKey="customer" stepKey="deleteCustomer"/>
            <deleteData createDataKey="product" stepKey="deleteProduct"/>
            <deleteData createDataKey="groupedProduct" stepKey="deleteGroupedProduct"/>
            <deleteData createDataKey="additionalStock" after="logoutOfAdmin" stepKey="deleteStock"/>
            <deleteData createDataKey="category" after="deleteStock" stepKey="deleteCategory"/>
            <actionGroup ref="AssignWebsiteToStockActionGroup" stepKey="assignMainWebsiteToDefaultStock">
                <argument name="stockName" value="{{_defaultStock.name}}"/>
                <argument name="websiteName" value="{{_defaultWebsite.name}}"/>
            </actionGroup>
            <actionGroup ref="DisableSourceActionGroup" stepKey="disableSource">
                <argument name="sourceCode" value="$$additionalSource.source[source_code]$$"/>
            </actionGroup>
            <actionGroup ref="logout" stepKey="logoutOfAdmin"/>
        </after>

        <!--Assign simple product to additional source.-->
        <amOnPage url="{{AdminProductEditPage.url($$product.id$$)}}" stepKey="openProductPage"/>
        <actionGroup ref="AssignSourceToProductActionGroup" stepKey="assignTestSourceToCreatedProduct">
            <argument name="sourceCode" value="$$additionalSource.source[source_code]$$"/>
        </actionGroup>
        <fillField selector="{{AdminProductSourcesGrid.rowQty('1')}}" userInput="100" stepKey="setCustomSourceQuantity"/>
        <actionGroup ref="AdminFormSaveAndClose" stepKey="saveSimpleProduct"/>
        <!--Assign simple product to grouped product.-->
        <amOnPage url="{{AdminProductEditPage.url($$groupedProduct.id$$)}}" stepKey="openGroupedProductEditPage"/>
        <click selector="{{AdminProductFormGroupedProductsSection.addProductsToGroup}}" stepKey="clickAddProductsToGroup"/>
        <waitForElementVisible selector="{{AdminAddProductsToGroupPanel.filters}}" stepKey="waitForGroupedProductModal"/>
        <actionGroup ref="filterProductGridBySku" stepKey="filterGroupedProductOptionsBySimple">
            <argument name="product" value="$$product$$"/>
        </actionGroup>
        <checkOption selector="{{AdminAddProductsToGroupPanel.firstCheckbox}}" stepKey="checkProductFilterResult"/>
        <click selector="{{AdminAddProductsToGroupPanel.addSelectedProducts}}" stepKey="clickAddSelectedGroupProducts"/>
        <waitForLoadingMaskToDisappear stepKey="waitForProductsAssignedToGroupedProduct" after="clickAddSelectedGroupProducts"/>
        <actionGroup ref="fillDefaultQuantityForLinkedToGroupProductInGrid" stepKey="fillDefaultQtyForVirtualProduct">
            <argument name="productName" value="$$product.name$$"/>
            <argument name="qty" value="10"/>
        </actionGroup>
        <actionGroup ref="AdminFormSaveAndClose" stepKey="saveAndCloseGroupedProduct"/>
        <!--Login to storefront.-->
        <actionGroup ref="LoginToStorefrontActionGroup" stepKey="loginToStorefront">
            <argument name="Customer" value="$$customer$$"/>
        </actionGroup>
        <!--Add product to cart.-->
        <amOnPage url="{{StorefrontProductPage.url($$groupedProduct.name$$)}}" stepKey="navigateToGroupedPDP"/>
        <click selector="{{StorefrontProductPageSection.addToCartBtn}}" stepKey="addToCart"/>
        <!--Place order.-->
        <conditionalClick selector="{{StorefrontMinicartSection.showCart}}" dependentSelector="{{StorefrontMinicartSection.miniCartOpened}}" visible="false" stepKey="openMiniCart"/>
        <click selector="{{StorefrontMinicartSection.goToCheckout}}" stepKey="goToCheckout"/>
        <click selector="{{CheckoutShippingMethodsSection.next}}" stepKey="clickNext"/>
        <waitForElement selector="{{CheckoutPaymentSection.placeOrder}}" time="30" stepKey="waitForPlaceOrderButton"/>
        <actionGroup ref="CheckoutSelectCheckMoneyOrderPaymentActionGroup" stepKey="selectCheckMoneyOrderPayment"/>
        <click selector="{{CheckoutPaymentSection.placeOrder}}" stepKey="placeOrder"/>
        <waitForPageLoad time="30" stepKey="waitForOrderPlacement"/>
        <grabTextFrom selector="{{CheckoutSuccessMainSection.orderNumber22}}" stepKey="grabOrderNumber"/>
        <see selector="{{CheckoutSuccessMainSection.success}}" userInput="Your order number is:" stepKey="checkOrderPlaceSuccessMessage"/>
        <!--Verify Order.-->
        <actionGroup ref="OpenOrderById" stepKey="openOrder">
            <argument name="orderId" value="{$grabOrderNumber}"/>
        </actionGroup>
        <waitForElementVisible selector="{{AdminOrderItemsOrderedSection.itemQty('1')}}" stepKey="waitForViewOrderedQuantity"/>
        <see selector="{{AdminOrderItemsOrderedSection.itemQty('1')}}" userInput="Ordered 10" stepKey="verifyOrderedQuantity"/>
        <!--Admin Area Process Partial Shipment.-->
        <click selector="{{AdminOrderDetailsMainActionsSection.ship}}" stepKey="clickShipAction"/>
        <click selector="{{AdminShipmentMainActionsSection.submitShipment}}" stepKey="clickSubmitShipment"/>
        <see selector="{{AdminOrderDetailsMessagesSection.successMessage}}" userInput="The shipment has been created." stepKey="checkShipmentSuccessMessage"/>
        <!--Verify product quantity.-->
        <amOnPage url="{{AdminProductIndexPage.url}}" stepKey="navigateToProductIndexPageForCheckProductQtyAfterCreditMemo"/>
        <actionGroup ref="AdminGridFilterSearchResultsByInput" stepKey="findProductBySkuToCheckQtyAfterCreditMemo">
            <argument name="selector" value="AdminProductGridFilterSection.skuFilter"/>
            <argument name="value" value="$$product.sku$$"/>
        </actionGroup>
        <see selector="{{AdminProductGridSection.productQtyPerSource('1',$$additionalSource.source[name]$$)}}" userInput="90" stepKey="checkProductSourceQtyAfterCreditMemo"/>
        <see selector="{{AdminProductGridSection.productSalableQty('1', $$additionalStock.stock[name]$$)}}" userInput="90" stepKey="checkSalableQtyAfterCreditMemo"/>
    </test>
</tests>
